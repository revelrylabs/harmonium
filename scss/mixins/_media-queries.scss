//$breakpoints list defined in settings

$devices: (
  // iPhone 7 / 8
  iphone: (
    and (device-width : 375px)
    and (device-height : 667px)
    and (-webkit-device-pixel-ratio : 2)
  ),
  iphone-portrait: (
    and (device-width : 375px)
    and (device-height : 667px)
    and (-webkit-device-pixel-ratio : 2)
    and (orientation : portrait)
  ),
  iphone-landscape: (
    and (device-width : 375px)
    and (device-height : 667px)
    and (-webkit-device-pixel-ratio : 2)
    and (orientation : landscape)
  ),
  // iPhone 6+ / 6s+ / 7+ / 8+
  iphone-plus: (
    and (device-width : 414px)
    and (device-height : 736px)
    and (-webkit-device-pixel-ratio : 3)
  ),
  iphone-plus-portrait: (
    and (device-width : 414px)
    and (device-height : 736px)
    and (-webkit-device-pixel-ratio : 3)
    and (orientation : portrait)
  ),
  iphone-plus-landscape: (
    and (device-width : 414px)
    and (device-height : 736px)
    and (-webkit-device-pixel-ratio : 3)
    and (orientation : landscape)
  ),
  // iPhone X
  iphone-x: (
    and (device-width : 375px)
    and (device-height : 812px)
    and (-webkit-device-pixel-ratio : 3)
  ),
  iphone-x-portrait: (
    and (device-width : 375px)
    and (device-height : 812px)
    and (-webkit-device-pixel-ratio : 3)
    and (orientation : portrait)
  ),
  iphone-x-landscape: (
    and (device-width : 375px)
    and (device-height : 812px)
    and (-webkit-device-pixel-ratio : 3)
    and (orientation : landscape)
  ),
);

@mixin breakpoint($size) {
  @each $item, $value in $breakpoints {
    @if $item == $size {
      @if $value != null {
        @media #{screen and break-for($item)} {
          @content;
        }
      }
    }
  }
}
//@include device(device-name-here) {
//  styles go here
//}
@mixin device($size) {
  @each $item, $value in $devices {
    @if $item == $size {
      @if $value != null {
        @media #{only screen device-for($value)} {
          @content;
        }
      }
    }
  }
}

@function device-for($name) {
  $device: map-get($devices, $name);
  @return "#{$device}";
}

@function min-width-for($screen) {
  $width: map-get($min-widths, $screen);
  @return '(min-width: #{$width})';
}

@function max-width-for($screen) {
  $width: map-get($max-withs, $screen);
  @return '(max-width: #{$width})';
}

@function break-for($screen) {
  $min: min-width-for($screen);
  $max: max-width-for($screen);
  @return 'screen and #{$min} and #{$max}';
}

@mixin media-min-width($min-breakpoint-name) {
  @media #{min-width-for($min-breakpoint-name)} {
    @content;
  }
}


@mixin print {
  @media print {
    @content;
  }
}
