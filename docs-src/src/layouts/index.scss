@import '../../../scss/app';
@import url('https://use.typekit.net/sdk4npj.css');

@mixin alert-color-stack {
  background-color: $color-ui-alert;
  border-color: mix($color-ui-alert, $color-white, 33%);
  color: mix($color-ui-alert, $color-white, 33%);
}

// TYPOGRAPHY

// Proxima Nova Headers for docs only
h1,
h2,
h3,
h4,
h5,
h6 {
  font-family: 'proxima-nova', $font-family-sans-serif;
}

//TODO incorporate this into typography styles
h1 {
  line-height: 1.1;
  margin: 0;
  padding-top: $padding-large;
}

h2 {
  line-height: 1.1;
  margin: 0;
  padding: 0 0 $padding-base;
}

code {
  background: darken($color-lightest-gray, 1%);
  border: 1px solid $color-black-03;
  padding: 0 5px;
}

// For grid example pages, colorize columns and mark the edges, and put spacing between rows
.ColumnExamples {

  &.rev-Row,
  .rev-Row {
    margin-bottom: $margin-base;

    .rev-Row {
      margin-bottom: 0;
    }
  }

  .rev-Col {
    // bottom and top padding for demo purposes only
    padding-bottom: $padding-base;
    padding-top: $padding-base;
    text-align: center;

    // All of this is a way to put an outline-esque border on the left and
    // right edge without taking up space (doing it this way, because outline
    // can't be applied to only left and right).
    // If we just put left and right borders, it can cause weird overflows
    // and wrapping with the grid, which is bad for a grid demo page
    &:before {
      // Mark left and right edges
      border-left: 2px dotted $color-gray;
      border-right: 2px dotted $color-gray;
      // Position to be the same size and location as the column
      bottom: 0;
      // Needs content to be placed in DOM
      content: ' ';
      left: -1px;
      position: absolute;
      right: -1px;
      top: 0;
    }
  }

  // Throw some grayscale colors on the grid columns to show what space they
  // occupy
  .rev-Col:nth-child(6n + 1) {
    @include color-stack($color-lightest-gray);
  }

  .rev-Col:nth-child(6n + 2) {
    @include color-stack($color-lighter-gray);
  }

  .rev-Col:nth-child(6n + 3) {
    @include color-stack($color-light-gray);
  }

  .rev-Col:nth-child(6n + 4) {
    @include color-stack($color-gray);
  }

  .rev-Col:nth-child(6n + 5) {
    @include color-stack($color-dark-gray);
  }

  .rev-Col:nth-child(6n + 6) {
    @include color-stack($color-darker-gray);
  }

  // For nesting example, show the extents of the nested row
  .rev-Col .rev-Row {
    outline: 1px solid $color-white;
  }

  // removing the bkgd on Block Grid so that kitty images look better
  &.ColumnExamples--blockGrid {
    .rev-Col {
      background: transparent;
      margin-bottom: $padding-small;
    }
  }
}

// Design Principle Cards
.DesignPrinciples {
  .rev-Card {
    padding: $padding-base 0;
  }

  .SectionDivider {
    @include breakpoint(large) {
      border-left: 4px solid $color-divider;
      padding-left: $padding-base;
    }
  }
}

// Bkgd Colors
.ExampleBkgd--primary {
  background: $color-ui-primary;
  display: block;
  margin-bottom: $padding-base;
  padding: $padding-base $padding-base 0;
}

// Color Swatches
.ExampleSwatches {
  @include aspect-ratio(1, 1);
  @include color-management;
}

// Buttons
.ExampleButtons {
  .rev-Button {
    margin-right: $margin-base;
  }
}

// Visibility
.ExampleVisibility {
  padding: $padding-base;
}

.ExamplePink {
  background: pink;
}

// Example TopBars
.playground .rev-TopBar {
  margin: 0 0 $spacing-base;
}

// Branding
.ExampleBrand {
  @include flex(center, row, center, nowrap);
  height: 48px;
  padding: $padding-tiny $padding-small;
  position: relative;

  @include breakpoint(medium) {
    margin: $margin-large 0 $margin-base;
    padding: 0 $padding-base;
  }

  img {
    height: 100%;
    width: auto;

    @include breakpoint(medium) {
      height: auto;
      margin-bottom: $padding-small;
      width: 100%
    }
  }

  small {
    bottom: -1.2rem;
    color: $color-white-60;
    font-size: $font-size-base;
    font-weight: normal;
    left: $padding-base;
    position: absolute;
  }
}

.rev-Brand-symbol {
  margin: $margin-large auto $margin-base;
  max-width: 20rem;
}

// Topbar Small Only
@include breakpoint(small-only) {
  .rev-TopBar.Show--smallOnly {
    box-shadow: 0 0 3px 0 $color-black-20;
    border: 0;
    margin-bottom: $margin-base;

    small {
      color: $color-white-60;
      font-size: $font-size-small;
      font-weight: normal;
    }
  }
}

// Sidebar Nav
.DocsSiteNav {
  &.rev-Drawer.rev-Drawer--open {
    .rev-Drawer-closer {
      color: $color-white-60;
      transform: rotate(0.125turn);

      &:hover,
      &:active,
      &:focus {
        color: $color-white;
      }
    }
  }

  @include breakpoint(small-only) {
    top: $topbar-height;

    &.rev-Drawer {
      .rev-Drawer-closer {
        top: $topbar-height;
      }

      .rev-Drawer-expander {
        background: $color-brand-primary;
        border-radius: 0 $border-radius-small $border-radius-small 0;
        color: $color-white;
        font-size: 18px;
        top: $topbar-height + 10;
        width: $icon-size-base;
      }
    }
  }

  .rev-Drawer-contents {
    background: $color-brand-primary;
    background: linear-gradient(to bottom, $color-brand-secondary 0%, $color-brand-primary 100%);
    color: $color-white;
    padding-bottom: $padding-larger;
  }

  .rev-Menu-item--text {
    color: $color-white-60;
    h5 {
      padding: $padding-small 0 0;
    }
  }

  .rev-Menu-item a {
    color: $color-white-80;
    position: relative;

    &:hover,
    &:active,
    &:focus {
      background: $color-white-06;
      color: $color-white;
    }

    &:active,
    &:focus {
      background: $color-white-10;
    }
  }

  .rev-Menu-item--selected a {
    background: $color-white-10;
    color: $color-white;

    &:after {
      background: $color-white;
      border-radius: 0 $border-radius-small $border-radius-small 0;
      content: '';
      height: 100%;
      left: 0;
      position: absolute;
      top: 0;
      width: 5px;
    }
  }
}

.FixedDrawerLinks {
  @include flex(stretch, row, center, nowrap);
  @include global-transition;
  background: $color-ui-primary;
  border-top: 1px solid $color-divider-dark;
  bottom: 0;
  left: -$drawer-width;
  position: fixed;
  width: $drawer-width;
  z-index: $z-index-above;

  .rev-Drawer--open & {
    left: 0;
  }

  @include breakpoint(medium) {
    left: 0;
  }

  .rev-Menu-item {
    flex: 1;
    text-align: center;

    &:first-child {
      border-right: 1px solid $color-divider-dark;
    }
  }
}

// DRAWER EXAMPLE STYLES
.ExampleDrawerContainer {
  min-height: 32rem;
  position: relative;
}

// SLIDER
.rev-Slider {
  margin: $padding-larger $padding-small;
}

pre {
  background: none;
  border: 0px;
  font-family: monospace;
  overflow-wrap: break-word;
  margin: 0 0 $margin-base;
  overflow: hidden;
  padding: $padding-small;
  pointer-events: none;
  position: relative;
  text-align: left;
  white-space: pre-wrap;
  word-break: keep-all;
}

.HomePage {
  pre {
    max-width: 70rem;
  }
}

.DesignTokenExamples {
  .DesignTokenVariable {
    font-size: $font-size-base;
    background-color: transparent;
  }
}

.rev-Hero {
  text-align: center;

  @include breakpoint(small-only) {
    margin-top: -$margin-base; // Negate the margin bottom put on the topbar for mobile
  }
}
